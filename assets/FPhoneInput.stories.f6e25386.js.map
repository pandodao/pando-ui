{"version":3,"file":"FPhoneInput.stories.f6e25386.js","sources":["../../packages/uikit/src/composables/useCountries.ts","../../packages/uikit/src/components/FPhoneInput/FCountryCodeSelect.tsx","../../packages/uikit/src/components/FPhoneInput/FPhoneInput.tsx"],"sourcesContent":["import { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\n\nimport type { Ref } from \"vue\";\n\nexport function useCountries(filter: Ref<string>) {\n  const countries = ref<{ code: string; name: string }[]>([]);\n\n  onMounted(async () => {\n    const resp = await axios.get(\n      \"https://static.fox.one/assets/country-code.json\"\n    );\n    const data = resp.data;\n\n    countries.value = Object.keys(data).map((k) => ({\n      name: data[k].name,\n      code: String(data[k].dialCode) + \"\",\n    }));\n  });\n\n  const filtered = computed(() => {\n    return countries.value.filter((country) => {\n      const name = String(country.name).toLowerCase();\n      const code = String(country.code).toLowerCase();\n\n      return name.startsWith(filter.value) || code.startsWith(filter.value);\n    });\n  });\n\n  return { countries, filtered };\n}\n","import { defineComponent, ref } from \"vue\";\nimport { useLocale } from \"vuetify\";\nimport { VIcon, VList, VLazy } from \"vuetify/components\";\nimport { FListItem } from \"../FListItem\";\nimport { FModal } from \"../FModal\";\nimport { FSearchInput } from \"../FSearchInput\";\nimport { useCountries } from \"../../composables\";\n\nimport \"./FCountryCodeSelect.scss\";\n\nexport const FCountryCodeSelect = defineComponent({\n  name: \"FCountryCodeSelect\",\n\n  props: {\n    dialog: {\n      type: Boolean,\n      default: false,\n    },\n    code: {\n      type: String,\n      default: \"\",\n    },\n  },\n\n  emits: {\n    \"update:code\": (value: string) => true,\n    \"update:dialog\": (value: Boolean) => true,\n  },\n\n  setup(props, { emit }) {\n    const { t } = useLocale();\n\n    const filter = ref(\"\");\n    const { filtered } = useCountries(filter);\n\n    const handleSelect = (code) => {\n      emit(\"update:code\", code);\n      emit(\"update:dialog\", false);\n    };\n\n    return () => (\n      <FModal\n        title={t(\"$vuetify.uikit.select_phone_code\")}\n        modelValue={props.dialog}\n        onUpdate:modelValue={(v) => emit(\"update:dialog\", v)}\n      >\n        {{\n          activator: ({ props: { onClick } }) => {\n            return (\n              <div class=\"f-country-code-select__field\" onClick={onClick}>\n                {props.code ? (\n                  <span class=\"f-country-code-select__code\">\n                    {props.code || \"code\"}\n                  </span>\n                ) : (\n                  <VIcon>$question</VIcon>\n                )}\n                <VIcon size=\"16\">$expand</VIcon>\n              </div>\n            );\n          },\n          default: () => (\n            <div class=\"f-country-code-select\">\n              <div class=\"f-country-code-select__search\">\n                <FSearchInput v-model={filter.value} />\n              </div>\n\n              <VList class=\"f-country-code-select__list\">\n                {filtered.value.map((country) => {\n                  return (\n                    <VLazy minHeight={48}>\n                      <FListItem\n                        title={country.code + \" \" + country.name}\n                        value={country.code}\n                        onClick={() => handleSelect(country.code)}\n                      />\n                    </VLazy>\n                  );\n                })}\n              </VList>\n            </div>\n          ),\n        }}\n      </FModal>\n    );\n  },\n});\n","import { defineComponent, ref } from \"vue\";\nimport { FInput } from \"../FInput\";\nimport { FCountryCodeSelect } from \"./FCountryCodeSelect\";\n\nexport const FPhoneInput = defineComponent({\n  name: \"FPhoneInput\",\n\n  props: {\n    code: { type: String, default: \"\" },\n  },\n\n  emits: {\n    \"update:code\": (value: string) => true,\n  },\n\n  setup(props, { slots, emit }) {\n    const dialog = ref(false);\n    const presets = { reverse: true, type: \"number\" };\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if ([\"e\", \"+\", \"-\", \".\"].includes(e.key)) {\n        e.preventDefault();\n      }\n    };\n\n    return () => (\n      <FInput {...presets} onKeydown={handleKeydown}>\n        {{\n          ...slots,\n          \"prepend-inner\": () => (\n            <FCountryCodeSelect\n              v-model:dialog={dialog.value}\n              code={props.code}\n              onUpdate:code={(v) => emit(\"update:code\", v)}\n            />\n          ),\n        }}\n      </FInput>\n    );\n  },\n});\n"],"names":["useCountries","filter","countries","ref","onMounted","data","axios","k","filtered","computed","country","name","code","__name","_isSlot","s","_isVNode","FCountryCodeSelect","defineComponent","props","dialog","type","Boolean","default","String","emits","value","setup","emit","t","useLocale","handleSelect","_createVNode","FModal","v","activator","onClick","VIcon","_createTextVNode","_slot","FSearchInput","$event","VList","map","VLazy","FListItem","FPhoneInput","slots","presets","reverse","handleKeydown","e","includes","key","preventDefault"],"mappings":"yrDAKO,SAASA,EAAaC,EAAqB,CAC1C,MAAAC,EAAYC,EAAsC,CAAA,CAAE,EAE1DC,EAAU,SAAY,CAIpB,MAAMC,GAHO,MAAMC,EAAM,IACvB,iDAAA,GAEgB,KAElBJ,EAAU,MAAQ,OAAO,KAAKG,CAAI,EAAE,IAAKE,IAAO,CAC9C,KAAMF,EAAKE,GAAG,KACd,KAAM,OAAOF,EAAKE,GAAG,QAAQ,EAAI,EACjC,EAAA,CAAA,CACH,EAEK,MAAAC,EAAWC,EAAS,IACjBP,EAAU,MAAM,OAAQQ,GAAY,CACzC,MAAMC,EAAO,OAAOD,EAAQ,IAAI,EAAE,YAAY,EACxCE,EAAO,OAAOF,EAAQ,IAAI,EAAE,YAAY,EAEvC,OAAAC,EAAK,WAAWV,EAAO,KAAK,GAAKW,EAAK,WAAWX,EAAO,KAAK,CAAA,CACrE,CACF,EAEM,MAAA,CAAE,UAAAC,EAAW,SAAAM,EACtB,CAzBgBK,EAAAb,EAAA,gBCGmB,SAAAc,EAAAC,EAAA,CAAA,OAAA,OAAAA,GAAA,YAAA,OAAA,UAAA,SAAA,KAAAA,CAAA,IAAA,mBAAA,CAAAC,EAAAD,CAAA,CAAA,CAAAF,EAAAC,EAAA,WAE5B,MAAMG,EAAqBC,EAAgB,CAChDP,KAAM,qBAENQ,MAAO,CACLC,OAAQ,CACNC,KAAMC,QACNC,QAAS,EACV,EACDX,KAAM,CACJS,KAAMG,OACND,QAAS,EACX,CACD,EAEDE,MAAO,CACL,cAAgBC,GAAkB,GAClC,gBAAkBA,GAAmB,EACtC,EAEDC,MAAMR,EAAO,CAAES,KAAAA,CAAK,EAAG,CACrB,KAAM,CAAEC,EAAAA,CAAG,EAAGC,EAAS,EAEjB7B,EAASE,EAAI,EAAE,EACf,CAAEK,SAAAA,CAAS,EAAIR,EAAaC,CAAM,EAElC8B,EAAgBnB,EAAAA,GAAS,CAC7BgB,EAAK,cAAehB,CAAI,EACxBgB,EAAK,gBAAiB,EAAK,GAFPhB,gBAKtB,MAAO,IAAAoB,EAAAC,EAAA,CAAA,MAEIJ,EAAE,kCAAkC,EAAC,WAChCV,EAAMC,OAAM,sBACFc,GAAMN,EAAK,gBAAiBM,CAAC,CAAC,EAAA,CAGlDC,UAAW,CAAC,CAAEhB,MAAO,CAAEiB,QAAAA,CAAQ,CAAE,IAC/BJ,EAAA,MAAA,CAAA,MACa,+BAA8B,QAAUI,CAChDjB,EAAAA,CAAAA,EAAMP,KAAIoB,EAAA,OAAA,CAAA,MACG,6BAA6B,EAAA,CACtCb,EAAMP,MAAQ,MAAM,CAAA,EAAAoB,EAAAK,EAAA,KAAA,CAAA,QAAA,IAAA,CAAAC,EAAA,WAAA,CAAA,EAIxB,EAAAN,EAAAK,EAAA,CAAA,KACW,IAAI,EAAA,CAAA,QAAA,IAAA,CAAAC,EAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAItBf,QAAS,IAAA,CAAA,IAAAgB,EAAA,OAAAP,EAAA,MAAA,CAAA,MACI,uBAAuB,EAAA,CAAAA,EAAA,MAAA,CAAA,MACrB,+BAA+B,EAAA,CAAAA,EAAAQ,EAAA,CAAA,WACjBvC,EAAOyB,MAAK,sBAAZzB,GAAAA,EAAOyB,MAAKe,CAAA,EAAA,IAAA,CAAA,CAAA,EAAAT,EAAAU,EAAA,CAAA,MAGxB,6BAA6B,EAAA5B,EAAAyB,EACvC/B,EAASkB,MAAMiB,IAAKjC,GACnBsB,EAAAY,EAAA,CAAA,UACoB,EAAE,EAAA,CAAA,QAAA,IAAA,CAAAZ,EAAAa,EAAA,CAAA,MAETnC,EAAQE,KAAO,IAAMF,EAAQC,KAAI,MACjCD,EAAQE,KAAI,QACV,IAAMmB,EAAarB,EAAQE,IAAI,CAAC,EAAA,IAAA,CAAA,CAAA,CAAA,CAIhD,CAAC,EAAA2B,EAAA,CAAA,QAAA,IAAA,CAAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAMb,CACH,CACF,CAAC,EClFYO,EAAc5B,EAAgB,CACzCP,KAAM,cAENQ,MAAO,CACLP,KAAM,CAAES,KAAMG,OAAQD,QAAS,EAAG,CACnC,EAEDE,MAAO,CACL,cAAgBC,GAAkB,EACnC,EAEDC,MAAMR,EAAO,CAAE4B,MAAAA,EAAOnB,KAAAA,CAAK,EAAG,CAC5B,MAAMR,EAASjB,EAAI,EAAK,EAClB6C,EAAU,CAAEC,QAAS,GAAM5B,KAAM,UAEjC6B,EAAiBC,EAAAA,GAAqB,CACtC,CAAC,IAAK,IAAK,IAAK,GAAG,EAAEC,SAASD,EAAEE,GAAG,GACrCF,EAAEG,eAAc,GAFGH,iBAMvB,MAAO,UACOH,EAAO,CAAA,UAAaE,CAAa,CAAA,EAAA,CAEzC,GAAGH,EACH,gBAAiB,IAAAf,EAAAf,EAAA,CAAA,OAEGG,EAAOM,MAAK,kBAAZN,GAAAA,EAAOM,MAAKe,EAAA,KACtBtB,EAAMP,KAAI,gBACAsB,GAAMN,EAAK,cAAeM,CAAC,CAAC,EAAA,IAAA,EAKrD,CACH,CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;"}