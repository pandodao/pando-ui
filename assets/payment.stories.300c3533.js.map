{"version":3,"file":"payment.stories.300c3533.js","sources":["../../packages/uikit/src/plugins/payment.ts"],"sourcesContent":["import { createVNode, nextTick, render, getCurrentInstance } from \"vue\";\nimport { genPaymentUrl } from \"@foxone/utils/mixin\";\n\nimport type { App, VNode } from \"vue\";\n\nimport { FPaymentModal } from \"../components/FPaymentModal\";\n\nexport interface PaymentOptions {\n  assetId: string;\n  amount: string;\n  scheme: string;\n  channel: \"mixin\" | \"fennec\" | \"metamask\" | \"walletconnect\";\n  hideCheckingModal?: boolean;\n  actions: {\n    mixin?: () => void;\n    fennec?: () => Promise<boolean>;\n    mvm?: () => Promise<boolean>;\n  };\n  checker: () => Promise<boolean>;\n  container?: string;\n}\n\nexport interface MixinPaymentOptions {\n  assetId: string;\n  amount: string;\n  recipient: string;\n  traceId: string;\n  memo: string;\n  hideCheckingModal?: boolean;\n  checker: () => Promise<boolean>;\n}\n\nexport function usePayment() {\n  const instance = getCurrentInstance()!;\n\n  return instance.appContext.config.globalProperties.$uikit.payment;\n}\n\nexport type Keys = \"show\" | \"mixin\";\n\nexport type PaymentPlugin = Record<\n  Keys,\n  (options?: PaymentOptions | MixinPaymentOptions) => void\n>;\n\nfunction install(app: App) {\n  let instance: VNode | null = null;\n\n  const show = async (options: PaymentOptions) => {\n    if (instance) {\n      await instance.component!.exposed!.show(options);\n    }\n\n    await nextTick(async () => {\n      const appendTo = document.querySelector(\n        options.container || \"[data-v-app]\"\n      );\n      const container = document.createElement(\"div\");\n      const vnode = createVNode(FPaymentModal, {\n        ...options,\n        attach: container,\n        onDestroy: () => {\n          render(null, container);\n          instance = null;\n          appendTo?.removeChild(container);\n        },\n      });\n\n      vnode.appContext = app._context!;\n      render(vnode, container);\n      appendTo?.appendChild(container);\n      instance = vnode;\n\n      await instance.component!.exposed!.show(options);\n    });\n  };\n\n  const mixin = (options: MixinPaymentOptions) => {\n    const scheme = genPaymentUrl(options);\n\n    return show({\n      ...options,\n      channel: \"mixin\",\n      scheme,\n      actions: { mixin: () => (window.location.href = scheme) },\n    });\n  };\n\n  const payment = { show, mixin };\n  const properties = app.config.globalProperties;\n\n  properties.$uikit = properties.$uikit || {};\n  properties.$uikit.payment = payment as PaymentPlugin;\n}\n\nexport function Payment() {}\n\nPayment.install = install;\n"],"names":["usePayment","getCurrentInstance","__name"],"mappings":"o4CAgCO,SAASA,GAAa,CAG3B,OAFiBC,IAED,WAAW,OAAO,iBAAiB,OAAO,OAC5D,CAJgBC,EAAAF,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}