{"version":3,"file":"variant.58edd759.js","sources":["../../node_modules/vuetify/lib/components/VDefaultsProvider/VDefaultsProvider.mjs","../../node_modules/vuetify/lib/composables/variant.mjs"],"sourcesContent":["// Composables\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { toRefs } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport const VDefaultsProvider = genericComponent(false)({\n  name: 'VDefaultsProvider',\n  props: {\n    defaults: Object,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      defaults,\n      reset,\n      root,\n      scoped\n    } = toRefs(props);\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped\n    });\n    return () => slots.default?.();\n  }\n});\n//# sourceMappingURL=VDefaultsProvider.mjs.map","import { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Composables\nimport { useColor } from \"./color.mjs\"; // Utilities\nimport { computed, unref } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\nexport const allowedVariants = ['elevated', 'flat', 'tonal', 'outlined', 'text', 'plain'];\nexport function genOverlays(isClickable, name) {\n  return _createVNode(_Fragment, null, [isClickable && _createVNode(\"span\", {\n    \"key\": \"overlay\",\n    \"class\": `${name}__overlay`\n  }, null), _createVNode(\"span\", {\n    \"key\": \"underlay\",\n    \"class\": `${name}__underlay`\n  }, null)]);\n}\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String,\n    default: 'elevated',\n    validator: v => allowedVariants.includes(v)\n  }\n}, 'variant');\nexport function useVariant(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const variantClasses = computed(() => {\n    const {\n      variant\n    } = unref(props);\n    return `${name}--variant-${variant}`;\n  });\n  const {\n    colorClasses,\n    colorStyles\n  } = useColor(computed(() => {\n    const {\n      variant,\n      color\n    } = unref(props);\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color\n    };\n  }));\n  return {\n    colorClasses,\n    colorStyles,\n    variantClasses\n  };\n}\n//# sourceMappingURL=variant.mjs.map"],"names":["VDefaultsProvider","genericComponent","props","_ref","slots","defaults","reset","root","scoped","toRefs","provideDefaults","_a","allowedVariants","genOverlays","isClickable","name","_createVNode","_Fragment","__name","makeVariantProps","propsFactory","v","useVariant","getCurrentInstanceName","variantClasses","computed","variant","unref","colorClasses","colorStyles","useColor","color"],"mappings":"sQAIY,MAACA,EAAoBC,EAAiB,EAAK,EAAE,CACvD,KAAM,oBACN,MAAO,CACL,SAAU,OACV,MAAO,CAAC,OAAQ,MAAM,EACtB,KAAM,QACN,OAAQ,OACT,EACD,MAAMC,EAAOC,EAAM,CACjB,GAAI,CACF,MAAAC,CACD,EAAGD,EACJ,KAAM,CACJ,SAAAE,EACA,MAAAC,EACA,KAAAC,EACA,OAAAC,CACN,EAAQC,EAAOP,CAAK,EAChB,OAAAQ,EAAgBL,EAAU,CACxB,MAAAC,EACA,KAAAC,EACA,OAAAC,CACN,CAAK,EACM,IAAM,OAAA,OAAAG,EAAAP,EAAM,UAAN,YAAAO,EAAA,KAAAP,GACd,CACH,CAAC,ECxBYQ,EAAkB,CAAC,WAAY,OAAQ,QAAS,WAAY,OAAQ,OAAO,EACjF,SAASC,EAAYC,EAAaC,EAAM,CAC7C,OAAOC,EAAaC,EAAW,KAAM,CAACH,GAAeE,EAAa,OAAQ,CACxE,IAAO,UACP,MAAS,GAAGD,YAChB,EAAK,IAAI,EAAGC,EAAa,OAAQ,CAC7B,IAAO,WACP,MAAS,GAAGD,aAChB,EAAK,IAAI,CAAC,CAAC,CACX,CARgBG,EAAAL,EAAA,eASJ,MAACM,EAAmBC,EAAa,CAC3C,MAAO,OACP,QAAS,CACP,KAAM,OACN,QAAS,WACT,UAAWC,GAAKT,EAAgB,SAASS,CAAC,CAC3C,CACH,EAAG,SAAS,EACL,SAASC,EAAWpB,EAAO,CAChC,IAAIa,EAAO,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAKQ,EAAsB,EACrG,MAAMC,EAAiBC,EAAS,IAAM,CACpC,KAAM,CACJ,QAAAC,CACN,EAAQC,EAAMzB,CAAK,EACf,MAAO,GAAGa,cAAiBW,GAC/B,CAAG,EACK,CACJ,aAAAE,EACA,YAAAC,CACJ,EAAMC,EAASL,EAAS,IAAM,CAC1B,KAAM,CACJ,QAAAC,EACA,MAAAK,CACN,EAAQJ,EAAMzB,CAAK,EACf,MAAO,CACL,CAAC,CAAC,WAAY,MAAM,EAAE,SAASwB,CAAO,EAAI,aAAe,QAASK,CACxE,CACG,CAAA,CAAC,EACF,MAAO,CACL,aAAAH,EACA,YAAAC,EACA,eAAAL,CACJ,CACA,CAzBgBN,EAAAI,EAAA"}