{"version":3,"file":"rounded.b42653ce.js","sources":["../../node_modules/vuetify/lib/composables/rounded.mjs"],"sourcesContent":["// Utilities\nimport { computed, isRef } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined\n  },\n  tile: Boolean\n}, 'rounded');\nexport function useRounded(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded;\n    const tile = isRef(props) ? props.value : props.tile;\n    const classes = [];\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`);\n    } else if (typeof rounded === 'string' || rounded === 0) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`);\n      }\n    } else if (tile) {\n      classes.push('rounded-0');\n    }\n    return classes;\n  });\n  return {\n    roundedClasses\n  };\n}\n//# sourceMappingURL=rounded.mjs.map"],"names":["makeRoundedProps","propsFactory","useRounded","props","name","getCurrentInstanceName","computed","rounded","isRef","tile","classes","value","__name"],"mappings":"uLAIY,MAACA,EAAmBC,EAAa,CAC3C,QAAS,CACP,KAAM,CAAC,QAAS,OAAQ,MAAM,EAC9B,QAAS,MACV,EACD,KAAM,OACR,EAAG,SAAS,EACL,SAASC,EAAWC,EAAO,CAChC,IAAIC,EAAO,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAKC,EAAsB,EAgBrG,MAAO,CACL,eAhBqBC,EAAS,IAAM,CACpC,MAAMC,EAAUC,EAAML,CAAK,EAAIA,EAAM,MAAQA,EAAM,QAC7CM,EAAOD,EAAML,CAAK,EAAIA,EAAM,MAAQA,EAAM,KAC1CO,EAAU,CAAA,EAChB,GAAIH,IAAY,IAAQA,IAAY,GAClCG,EAAQ,KAAK,GAAGN,YAAe,UACtB,OAAOG,GAAY,UAAYA,IAAY,EACpD,UAAWI,KAAS,OAAOJ,CAAO,EAAE,MAAM,GAAG,EAC3CG,EAAQ,KAAK,WAAWC,GAAO,OAExBF,GACTC,EAAQ,KAAK,WAAW,EAE1B,OAAOA,CACX,CAAG,CAGH,CACA,CApBgBE,EAAAV,EAAA"}