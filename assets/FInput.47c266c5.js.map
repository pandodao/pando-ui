{"version":3,"file":"FInput.47c266c5.js","sources":["../../packages/uikit/src/utils/number.ts","../../packages/uikit/src/components/FInput/FInput.tsx"],"sourcesContent":["import { toPrecision } from \"@foxone/utils/number\";\nimport BigNumber from \"bignumber.js\";\n\nexport function numberInput(value: string, precision: number | string) {\n  const dp = new BigNumber(value).decimalPlaces();\n\n  if (dp && dp > +precision) {\n    return toPrecision({ n: value, dp: +precision });\n  }\n\n  return value;\n}\n","import { defineComponent, ref } from \"vue\";\nimport { VTextField } from \"vuetify/components\";\nimport { numberInput } from \"../../utils/number\";\n\nimport \"./FInput.scss\";\n\nexport const FInput = defineComponent({\n  name: \"FInput\",\n\n  props: {\n    modelValue: { type: String, default: \"\" },\n    precision: { type: [Number, String] },\n    hideDefaultMessages: Boolean,\n  },\n\n  emits: {\n    \"update:modelValue\": (value) => true,\n  },\n\n  setup(props, { attrs, emit, slots }) {\n    const inputRef = ref<typeof VTextField>();\n\n    const handleChange = (value) => {\n      if (attrs.type === \"number\" && props.precision) {\n        emit(\"update:modelValue\", numberInput(value, props.precision));\n        inputRef?.value?.$forceUpdate();\n\n        return;\n      }\n\n      emit(\"update:modelValue\", value);\n    };\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (attrs.type === \"number\") {\n        if ([\"e\", \"+\", \"-\"].includes(e.key)) {\n          e.preventDefault();\n        }\n      }\n    };\n\n    return () => (\n      <VTextField\n        ref={inputRef}\n        class={[\n          \"f-input\",\n          { \"f-input--hide-default-messages\": props.hideDefaultMessages },\n          { \"f-input--focused\": inputRef?.value?.focused },\n        ]}\n        modelValue={props.modelValue}\n        onUpdate:modelValue={handleChange}\n        onKeydown={handleKeydown}\n      >\n        {{\n          ...slots,\n          details: slots.tools\n            ? (slotProps) => {\n                return (\n                  <div class=\"f-input__tools\">{slots.tools?.(slotProps)}</div>\n                );\n              }\n            : slots.details,\n        }}\n      </VTextField>\n    );\n  },\n});\n"],"names":["numberInput","value","precision","dp","BigNumber","toPrecision","__name","FInput","defineComponent","name","props","modelValue","type","String","default","Number","hideDefaultMessages","Boolean","emits","setup","attrs","emit","slots","inputRef","ref","handleChange","$forceUpdate","handleKeydown","e","includes","key","preventDefault","_createVNode","VTextField","focused","details","tools","slotProps"],"mappings":"4OAGgB,SAAAA,EAAYC,EAAeC,EAA4B,CACrE,MAAMC,EAAK,IAAIC,EAAUH,CAAK,EAAE,cAAc,EAE1C,OAAAE,GAAMA,EAAK,CAACD,EACPG,EAAY,CAAE,EAAGJ,EAAO,GAAI,CAACC,EAAW,EAG1CD,CACT,CARgBK,EAAAN,EAAA,eCGHO,MAAAA,EAASC,EAAgB,CACpCC,KAAM,SAENC,MAAO,CACLC,WAAY,CAAEC,KAAMC,OAAQC,QAAS,EAAI,EACzCZ,UAAW,CAAEU,KAAM,CAACG,OAAQF,MAAM,CAAG,EACrCG,oBAAqBC,OACtB,EAEDC,MAAO,CACL,oBAAsBjB,GAAU,EACjC,EAEDkB,MAAMT,EAAO,CAAEU,MAAAA,EAAOC,KAAAA,EAAMC,MAAAA,CAAM,EAAG,CACnC,MAAMC,EAAWC,IAEXC,EAAgBxB,EAAAA,GAAU,OAC9B,GAAImB,EAAMR,OAAS,UAAYF,EAAMR,UAAW,CAC9CmB,EAAK,oBAAqBrB,EAAYC,EAAOS,EAAMR,SAAS,CAAC,GAC7DqB,EAAAA,GAAAA,YAAAA,EAAUtB,QAAVsB,MAAAA,EAAiBG,eAEjB,MACF,CAEAL,EAAK,oBAAqBpB,CAAK,GARXA,gBAWhB0B,EAAiBC,EAAAA,GAAqB,CACtCR,EAAMR,OAAS,UACb,CAAC,IAAK,IAAK,GAAG,EAAEiB,SAASD,EAAEE,GAAG,GAChCF,EAAEG,eAAc,GAHCH,iBAQvB,MAAO,IAAA,OAAAI,OAAAA,EAAAC,EAAA,CAAA,IAEEV,EAAQ,MACN,CACL,UACA,CAAE,iCAAkCb,EAAMM,mBAAoB,EAC9D,CAAE,oBAAoBO,EAAAA,GAAAA,YAAAA,EAAUtB,QAAVsB,YAAAA,EAAiBW,OAAQ,CAAC,EACjD,WACWxB,EAAMC,WAAU,sBACPc,EAAY,UACtBE,CAAa,EAAA,CAGtB,GAAGL,EACHa,QAASb,EAAMc,MACVC,GAAc,OACb,OAAAL,EAAA,MAAA,CAAA,MACa,gBAAgB,EAAA,EAAEV,EAAAA,EAAMc,QAANd,YAAAA,EAAAA,KAAAA,EAAce,EAAU,CAAA,CAExD,EACDf,EAAMa,QAGf,EACH,CACF,CAAC"}