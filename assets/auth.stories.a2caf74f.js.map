{"version":3,"file":"auth.stories.a2caf74f.js","sources":["../../packages/uikit/src/plugins/auth.ts"],"sourcesContent":["import { createVNode, nextTick, render, getCurrentInstance } from \"vue\";\nimport { FAuthMethodModal } from \"../components/FAuthMethodModal\";\n\nimport type { App, VNode } from \"vue\";\nimport type { AuthMethod } from \"../types\";\n\nexport interface AuthMethodGlobalOptions {\n  authMethods?: AuthMethod[];\n  authMethodState?: Record<AuthMethod, boolean>;\n  // Mixin oauth params\n  clientId?: string;\n  scope?: string;\n  isFiresbox?: boolean;\n  pkce?: boolean;\n  hosts?: string[];\n  container?: string;\n}\n\nexport interface AuthMethodOptions {\n  handleAuth?: (...args: any) => void;\n  handleError?: (...args: any) => void;\n}\n\nexport type Keys = \"show\";\n\nexport type AuthPlugin = Record<\n  Keys,\n  (options?: AuthMethodGlobalOptions | AuthMethodOptions) => void\n>;\n\nexport function useAuth() {\n  const instance = getCurrentInstance()!;\n\n  return instance.appContext.config.globalProperties.$uikit.auth;\n}\n\nfunction install(app: App, globalOptions: AuthMethodGlobalOptions) {\n  let instance: VNode | null = null;\n\n  const show = (options: AuthMethodOptions & AuthMethodGlobalOptions) => {\n    if (instance) {\n      instance.component!.exposed!.close();\n    }\n\n    nextTick(() => {\n      const mergedOptions = { ...globalOptions, ...options };\n      const appendTo = document.querySelector(\n        mergedOptions.container || \"[data-v-app]\"\n      );\n      const container = document.createElement(\"div\");\n      const vnode = createVNode(FAuthMethodModal, {\n        ...mergedOptions,\n        attach: container,\n        onAuth: options.handleAuth,\n        onError: options.handleError,\n        onDestroy: () => {\n          render(null, container);\n          instance = null;\n          appendTo?.removeChild(container);\n        },\n      });\n\n      vnode.appContext = app._context!;\n      render(vnode, container);\n      appendTo?.appendChild(container);\n      instance = vnode;\n\n      instance.component!.exposed!.show();\n    });\n  };\n\n  const auth = { show };\n  const properties = app.config.globalProperties;\n\n  properties.$uikit = properties.$uikit || {};\n  properties.$uikit.auth = auth as AuthPlugin;\n}\n\nexport function Auth() {}\n\nAuth.install = install;\n"],"names":["useAuth","getCurrentInstance","__name"],"mappings":"41CA8BO,SAASA,GAAU,CAGxB,OAFiBC,IAED,WAAW,OAAO,iBAAiB,OAAO,IAC5D,CAJgBC,EAAAF,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}